{"version":3,"sources":["api/api.js","store/selectUser.js","store/todoFilter.js","components/TodoFilter/TodoFilter.jsx","components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","App.jsx","store/index.js","index.js"],"names":["BASE_URL","initialState","user","filter","todoTitle","TodoFilter","title","useSelector","state","todoFilterReducer","dispatch","useDispatch","className","action","type","name","value","onChange","event","payload","target","selectFilter","TodoList","todos","map","todo","key","id","classNames","completed","checked","readOnly","onClick","userId","CurrentUser","currentUserId","userReducer","useState","currentUser","setCurrentUser","useEffect","a","fetch","then","response","json","data","userFromServer","handleUser","email","phone","App","setTodos","selectedUser","todosForFilter","result","todosFromServer","handleTodos","length","includes","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ca5af94b.chunk.js","sourcesContent":["const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport function getTodos() {\n  return fetch(`${BASE_URL}/todos`)\n    .then(response => response.json())\n    .then(result => result.data.filter(todo => todo.userId));\n}\n\nexport function getUser(userId) {\n  return fetch(`${BASE_URL}/users/${userId}`)\n    .then(response => response.json())\n    .then(user => user.data);\n}\n","const SET_USER = 'SET_USER';\nconst HIDE_USER = 'HIDE_USER';\n\nconst initialState = {\n  user: null,\n};\n\nexport const userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER:\n      return {\n        ...state,\n        user: action.payload,\n      };\n\n    case HIDE_USER:\n      return {\n        ...state,\n        user: null,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const setUser = userId => ({\n  type: SET_USER,\n  payload: userId,\n});\n\nexport const hideUser = () => ({\n  type: HIDE_USER,\n});\n","// const SET_USER = 'SET_USER';\n// const HIDE_USER = 'HIDE_USER';\n\nconst initialState = {\n  filter: 'ALL',\n  // handlerFilterStatus: '',\n  todoTitle: '',\n};\n\nexport const todoFilterReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ALL':\n      return {\n        ...state,\n        filter: action.payload,\n      };\n\n    case 'ACTIVE':\n      return {\n        ...state,\n        filter: 'ACTIVE',\n      };\n\n    case 'COMPLETED':\n      return {\n        ...state,\n        filter: 'COMPLETED',\n      };\n\n    case 'CHANGE_SEARCH_TITLE':\n      return {\n        ...state,\n        todoTitle: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const selectFilter = filter => ({\n  type: 'ALL',\n  payload: filter,\n});\n\nexport const handleInput = todoTitle => ({\n  type: 'CHANGE_SEARCH_TITLE',\n  payload: todoTitle,\n});\n","import React from 'react';\nimport './TodoFilter.scss';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter, handleInput } from '../../store/todoFilter';\n\nexport const TodoFilter = () => {\n  const title = useSelector(state => state.todoFilterReducer.todoTitle);\n  const filter = useSelector(state => state.todoFilterReducer.filter);\n\n  const dispatch = useDispatch();\n\n  return (\n    <form className=\"TodoFilter\" action=\"\">\n      <input\n        className=\"TodoFilter__field\"\n        type=\"text\"\n        name=\"title\"\n        value={title}\n        onChange={(event) => {\n          dispatch(handleInput(event.target.value));\n        }}\n      />\n\n      <select\n        className=\"TodoFilter__field\"\n        name=\"selectedFilter\"\n        value={filter}\n        onChange={(event) => {\n          dispatch(selectFilter(event.target.value));\n        }}\n      >\n        <option value=\"ALL\">All</option>\n        <option value=\"ACTIVE\">Active</option>\n        <option value=\"COMPLETED\">Completed</option>\n      </select>\n    </form>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\n\nimport { useDispatch } from 'react-redux';\nimport { setUser } from '../../store/selectUser';\nimport { TodoFilter } from '../TodoFilter';\n\nexport const TodoList = ({ todos }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"TodoList\">\n      <h2>Todos:</h2>\n\n      <TodoFilter />\n\n      <div className=\"TodoList__list-container\">\n        <ul className=\"TodoList__list\">\n          {todos.map(todo => (\n            <li\n              key={todo.id}\n              className={classNames(\n                'TodoList__item',\n                todo.completed\n                  ? 'TodoList__item--checked'\n                  : 'TodoList__item--unchecked',\n              )}\n            >\n              <label>\n                <input\n                  checked={todo.completed}\n                  type=\"checkbox\"\n                  readOnly\n                />\n                <p>{todo.title}</p>\n              </label>\n\n              <button\n                className=\"\n                  TodoList__user-button\n                  TodoList__user-button--selected\n                  button\n                \"\n                type=\"button\"\n                onClick={() => dispatch(setUser(todo.userId))}\n              >\n                {'user '}\n                {todo.userId}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n  })).isRequired,\n};\n","import React, { useState, useEffect } from 'react';\n// import PropTypes from 'prop-types';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { hideUser } from '../../store/selectUser';\nimport { getUser } from '../../api/api';\nimport './CurrentUser.scss';\n\nexport const CurrentUser = () => {\n  const dispatch = useDispatch();\n  const currentUserId = useSelector(state => state.userReducer.user);\n  const [currentUser, setCurrentUser] = useState(null);\n\n  useEffect(() => {\n    const handleUser = async() => {\n      const userFromServer = await getUser(currentUserId);\n\n      setCurrentUser(userFromServer);\n    };\n\n    handleUser();\n  }, [currentUserId]);\n\n  return (\n    currentUser && (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:\n            {' '}\n            {currentUser.userId}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{currentUser.name}</h3>\n        <p className=\"CurrentUser__email\">{currentUser.email}</p>\n        <p className=\"CurrentUser__phone\">{currentUser.phone}</p>\n\n        <button\n          onClick={() => dispatch(hideUser())}\n          type=\"button\"\n          className=\"CurrentUser__clear\"\n        >\n          clear\n        </button>\n      </div>\n    )\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\n\nimport { useSelector } from 'react-redux';\nimport { getTodos } from './api/api';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\nconst App = () => {\n  const [todos, setTodos] = useState([]);\n\n  const filter = useSelector(state => state.todoFilterReducer.filter);\n  const title = useSelector(state => state.todoFilterReducer.todoTitle);\n\n  const selectedUser = useSelector(state => state.userReducer.user);\n\n  let todosForFilter = [...todos];\n\n  useEffect(() => {\n    const handleTodos = async() => {\n      const todosFromServer = await getTodos();\n\n      setTodos(todosFromServer);\n    };\n\n    handleTodos();\n  }, []);\n\n  switch (filter) {\n    case 'ACTIVE':\n      todosForFilter = todos.filter(todo => !todo.completed);\n      break;\n\n    case 'COMPLETED':\n      todosForFilter = todos.filter(todo => todo.completed);\n      break;\n\n    default:\n      todosForFilter = todos;\n      break;\n  }\n\n  if (title.length > 0) {\n    todosForFilter = todosForFilter.filter((todo) => {\n      if (todo.title) {\n        return todo.title.includes(title);\n      }\n\n      return false;\n    });\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__sidebar\">\n        <TodoList\n          todos={todosForFilter}\n        />\n      </div>\n\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          {selectedUser\n            ? <CurrentUser />\n            : 'No user selected'\n          }\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { userReducer } from './selectUser';\nimport { todoFilterReducer } from './todoFilter';\n\nconst rootReducer = combineReducers({\n  userReducer,\n  todoFilterReducer,\n});\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}